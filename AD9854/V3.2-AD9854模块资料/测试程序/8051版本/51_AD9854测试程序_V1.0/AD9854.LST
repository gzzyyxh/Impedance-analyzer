C51 COMPILER V9.05   AD9854                                                                07/16/2018 20:16:40 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE AD9854
OBJECT MODULE PLACED IN AD9854.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE AD9854.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <AD9854.h>
   2          #include <intrins.h>
   3          #include <reg52.h>
   4          #include <init.h>
   5          //**********************以下为系统时钟以及其相关变量设置**************************/
   6          /* 
   7            此处根据自己的需要设置系统时钟以及与其相关的因子，一次需且只需开启一个   
   8            CLK_Set为时钟倍频设置，可设置4~20倍倍频，但最大不能超过300MHZ
   9            Freq_mult_ulong和Freq_mult_doulle均为2的48次方除以系统时钟，一个为长整形，一个为双精度型
  10          */
  11          // #define CLK_Set 7
  12          // const ulong  Freq_mult_ulong  = 1340357;
  13          // const double Freq_mult_doulle = 1340357.032;
  14          
  15          //#define CLK_Set 9
  16          //const ulong  Freq_mult_ulong  = 1042500;     
  17          //const double Freq_mult_doulle = 1042499.9137431;
  18          
  19          // #define CLK_Set 8
  20          // const ulong  Freq_mult_ulong  = 1172812;
  21          // const double Freq_mult_doulle = 2932031.403;
  22          
  23          #define CLK_Set 10
  24          const ulong  Freq_mult_ulong  = 938250;
  25          const double Freq_mult_doulle = 938249.9224;
  26          
  27          uchar FreqWord[6];              //6个字节频率控制字
  28          
  29          //**************************修改硬件时要修改的部分********************************/
  30           #define AD9854_DataBus P3
  31           #define AD9854_AdrBus  P1
  32           sbit AD9854_RST   = P2^0;        //控制信号引脚
  33           sbit AD9854_SP    = P2^1;
  34           sbit AD9854_OSK   = P2^2;      //osk
  35           sbit AD9854_UDCLK = P2^4; 
  36           sbit AD9854_WR    = P1^6;
  37           sbit AD9854_FDATA = P2^6;       //fsk/bpsk/hold
  38           sbit AD9854_RD    = P2^7;
  39                
  40          
  41          
  42          //====================================================================================
  43          //函数名称:void AD9854_WR_Byte(uchar addr,uchar dat)
  44          //函数功能:AD9854并行口写入数据
  45          //入口参数:addr     6位地址
  46          //         dat      写入的数据
  47          //出口参数:无
  48          //====================================================================================
  49          void AD9854_WR_Byte(uchar addr,uchar dat)
  50          {
  51   1        AD9854_AdrBus  = (addr&0x3f) | (P1&0xc0);
  52   1        AD9854_DataBus = dat;
  53   1        AD9854_WR      = 0;
  54   1        AD9854_WR      = 1; 
  55   1      }
C51 COMPILER V9.05   AD9854                                                                07/16/2018 20:16:40 PAGE 2   

  56          
  57          //====================================================================================
  58          //函数名称:void AD9854_Init(void)
  59          //函数功能:AD9854初始化
  60          //入口参数:无
  61          //出口参数:无
  62          //====================================================================================
  63          void AD9854_Init(void)
  64          {
  65   1        AD9854_WR=1;//将读、写控制端口设为无效
  66   1        AD9854_RD=1;
  67   1        AD9854_UDCLK=0;
  68   1        AD9854_RST=1;                 //复位AD9854
  69   1        DelayMs(10);
  70   1        AD9854_RST=0;
  71   1        AD9854_SP = 1;
  72   1        
  73   1        //AD9854_WR_Byte(0x1d,0x10);             //关闭比较器
  74   1        AD9854_WR_Byte(0x1d,0x00);             //开启比较器
  75   1        AD9854_WR_Byte(0x1e,CLK_Set);    //设置系统时钟倍频            
  76   1        AD9854_WR_Byte(0x1f,0x00);     //设置系统为模式0，由外部更新
  77   1        AD9854_WR_Byte(0x20,0x60);     //设置为可调节幅度，取消插值补偿
  78   1      
  79   1        AD9854_UDCLK=1;               //更新AD9854输出
  80   1        AD9854_UDCLK=0;
  81   1      }
  82          
  83          //====================================================================================
  84          //函数名称:void Freq_convert(long Freq)
  85          //函数功能:正弦信号频率数据转换
  86          //入口参数:Freq   需要转换的频率，取值从0~SYSCLK/2
  87          //出口参数:无   但是影响全局变量FreqWord[6]的值
  88          //说明：   该算法位多字节相乘算法，有公式FTW = (Desired Output Frequency × 2N)/SYSCLK
  89          //         得到该算法，其中N=48，Desired Output Frequency 为所需要的频率，即Freq，SYSCLK
  90          //         为可编程的系统时钟，FTW为48Bit的频率控制字，即FreqWord[6]
  91          //====================================================================================
  92          void Freq_convert(long Freq)   
  93          {
  94   1        ulong FreqBuf;
  95   1        ulong Temp=Freq_mult_ulong;            
  96   1      
  97   1        uchar Array_Freq[4];           //将输入频率因子分为四个字节
  98   1        Array_Freq[0]=(uchar)Freq;
  99   1        Array_Freq[1]=(uchar)(Freq>>8);
 100   1        Array_Freq[2]=(uchar)(Freq>>16);
 101   1        Array_Freq[3]=(uchar)(Freq>>24);
 102   1      
 103   1        FreqBuf=Temp*Array_Freq[0];                  
 104   1        FreqWord[0]=FreqBuf;    
 105   1        FreqBuf>>=8;
 106   1      
 107   1        FreqBuf+=(Temp*Array_Freq[1]);
 108   1        FreqWord[1]=FreqBuf;
 109   1        FreqBuf>>=8;
 110   1      
 111   1        FreqBuf+=(Temp*Array_Freq[2]);
 112   1        FreqWord[2]=FreqBuf;
 113   1        FreqBuf>>=8;
 114   1      
 115   1        FreqBuf+=(Temp*Array_Freq[3]);
 116   1        FreqWord[3]=FreqBuf;
 117   1        FreqBuf>>=8;
C51 COMPILER V9.05   AD9854                                                                07/16/2018 20:16:40 PAGE 3   

 118   1      
 119   1        FreqWord[4]=FreqBuf;
 120   1        FreqWord[5]=FreqBuf>>8;     
 121   1      }  
 122          
 123          //====================================================================================
 124          //函数名称:void AD9854_SetSine(ulong Freq,uint Shape)
 125          //函数功能:AD9854正弦波产生程序
 126          //入口参数:Freq   频率设置，取值范围为0~(1/2)*SYSCLK
 127          //         Shape  幅度设置. 为12 Bit,取值范围为(0~4095) ,取值越大,幅度越大 
 128          //出口参数:无
 129          //====================================================================================
 130          void AD9854_SetSine(ulong Freq,uint Shape)
 131          {
 132   1        uchar count;
 133   1        uchar Adress;
 134   1      
 135   1        Adress = 0x04;                        //选择频率控制字地址的初值
 136   1      
 137   1        Freq_convert(Freq);              //频率转换
 138   1      
 139   1        for(count=6;count>0;)           //写入6字节的频率控制字  
 140   1        {
 141   2          AD9854_WR_Byte(Adress++,FreqWord[--count]);
 142   2        }
 143   1        
 144   1        AD9854_WR_Byte(0x21,Shape>>8);    //设置I通道幅度
 145   1        AD9854_WR_Byte(0x22,(uchar)(Shape&0xff));
 146   1        
 147   1        AD9854_WR_Byte(0x23,Shape>>8);    //设置Q通道幅度
 148   1        AD9854_WR_Byte(0x24,(uchar)(Shape&0xff));
 149   1      
 150   1        AD9854_UDCLK=1;                    //更新AD9854输出
 151   1        AD9854_UDCLK=0;
 152   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
