C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE CHARLCD
OBJECT MODULE PLACED IN .\CharLCD.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Drive\CharLCD.c LARGE BROWSE INCDIR(..\Application;..\Drive) DEBUG OBJEC
                    -TEXTEND PRINT(.\CharLCD.lst) TABS(2) OBJECT(.\CharLCD.obj)

line level    source

   1          //-----------------------------------------------------------------
   2          // 程序描述:
   3          //     HD44780(KS0066U)内核的字符型LCM子程序
   4          // 作    者: 凌智电子
   5          // 开始日期: 2009-11-28
   6          // 完成日期: 2009-11-28
   7          // 修改日期:
   8          // 版    本: V4.2:在V3版本上修改LCM使能信号的延时时间
   9          // 调试工具: C8051F02xTBC;1602字符型液晶显示模块(LCM)
  10          // 说    明:
  11          //     (1)调试使用的系统时钟频率Fsysclk=22.1184MHz;
  12          //     (2)LCM的接口方式:间接控制方式;
  13          //     (3)LCM的数据线(14-11脚)和控制线可以和单片机的任意I/O口相连,使程序更具
  14          //        通用性,且因它们均外接上拉电阻,需要在单片机配置中设置为推挽方式,如:
  15          //        P3MDOUT = 0xf0;                     // 数据线P3.7-3.1口设为推挽方式
  16          //        P2MDOUT = 0xe0;                     // 控制线P2.7-2.5口设为推挽方式
  17          //     (4)LCM初始化步骤,使用时根据需要选择;
  18          //     (5)读BF/AC函数和读LCM数据函数一般很少用到,这里不编写;
  19          //-----------------------------------------------------------------
  20          
  21          //-----------------------------------------------------------------
  22          // 头文件包含
  23          //-----------------------------------------------------------------
  24          #include <c8051f020.h>
  25          #include <intrins.h>
  26          #include "CharLCD.h"
  27          #include "delay.h"
  28          
  29          //-----------------------------------------------------------------
  30          // LCM的CGRAM数据定义
  31          //-----------------------------------------------------------------
  32          // 字符码即是CGROM的地址
  33          uchar code CGTab[64]={
  34            0x08,0x0F,0x12,0x0F,0x0A,0x1F,0x02,0x02,//"年"字符码=00H或08H
  35             0x0F,0x09,0x0F,0x09,0x0F,0x09,0x11,0x00,//"月"字符码=01H或09H
  36             0x1F,0x11,0x11,0x1F,0x11,0x11,0x1F,0x00,//"日"字符码=02H或0AH
  37             0x11,0x0A,0x04,0x1F,0x04,0x1F,0x04,0x00,//"￥"字符码=03H或0BH
  38             0x0E,0x00,0x1F,0x0A,0x0A,0x0A,0x13,0x00,//"元"字符码=04H或0CH
  39             0x18,0x18,0x07,0x08,0x08,0x08,0x07,0x00,//"℃"字符码=05H或0DH
  40             0x0F,0x0F,0x0F,0x0A,0x0F,0x12,0x07,0x1F,//"星"字符码=06H或0EH
  41             0x00,0x00,0x0E,0x00,0x00,0x1F,0x00,0x00 //"二"字符码=07H或0FH
  42            };
  43          // 0x04,0x04,0x04,0x07,0x04,0x04,0x1f,0x00,//"上"字符码
  44          // 0x1f,0x04,0x04,0x06,0x05,0x04,0x04,0x00,//"下"字符码=07H
  45          
  46          //-----------------------------------------------------------------
  47          // 全局变量:内RAM存储单元定义
  48          //-----------------------------------------------------------------
  49          uchar lcdbuff;
  50          uchar lcdbuff_1;
  51          /**
  52          uchar bdata lcdbuff;              // LCM命令/数据暂存单元,允许位操作
  53          sbit lcdbuff7=lcdbuff^7;          // 没有定义,不可在.c文件中直接使用位赋值
  54          sbit lcdbuff6=lcdbuff^6;
C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 2   

  55          sbit lcdbuff5=lcdbuff^5;
  56          sbit lcdbuff4=lcdbuff^4;
  57          sbit lcdbuff3=lcdbuff^3;
  58          sbit lcdbuff2=lcdbuff^2;
  59          sbit lcdbuff1=lcdbuff^1;
  60          sbit lcdbuff0=lcdbuff^0;
  61          /**/
  62          
  63          //-----------------------------------------------------------------
  64          // 函数声明
  65          //-----------------------------------------------------------------
  66          //void Wr_CodeData (void);               // 写操作共同部分程序
  67          //void Delay_10us (unsigned char t);    // 延时时基:10us
  68          
  69          //-----------------------------------------------------------------
  70          // 初始化程序区
  71          //-----------------------------------------------------------------
  72          
  73          //-----------------------------------------------------------------
  74          // void LCM_Init (void)
  75          //-----------------------------------------------------------------
  76          //
  77          // 函数功能: LCM初始化
  78          // 入口参数: 无
  79          // 返回参数: 无
  80          // 全局变量: 无
  81          // 调用模块: WrCLcdC(uchar);CG_Write()     
  82          // 注意事项: 
  83          //     (1)具体流程查看HD44780(KS0066)的中文数据手册;
  84          //     (2)因5V的液晶模块在3.3V电压工作的C8051单片机中应用,而其接口未
  85          //        接上拉电阻,所以需要多次(大于4次)对功能设置进行初始化才能液晶模块正常工作
  86          //-----------------------------------------------------------------
  87          void LCM_Init (void)
  88          {
  89   1        uchar i;
  90   1      
  91   1        for (i=5; i>0; i--)
  92   1        {
  93   2          WrCLcdC(0x28);                // LCM功能设置:4位数据接口,2行5*7显示
  94   2        }
  95   1        WrCLcdC(0x01);                  // LCM清屏
  96   1        WrCLcdC(0x06);                  // LCM输入方式设置:读写操作后AC自增1
  97   1        WrCLcdC(0x0F);                  // LCM显示控制设置:开,光标和闪烁显示
  98   1        WrCLcdC(0x0C);                  // LCM显示控制设置:开显示
  99   1        CG_Write();                     // LCM自定义字符库
 100   1      }
 101          
 102          //-----------------------------------------------------------------
 103          // 功能程序区
 104          //-----------------------------------------------------------------
 105          
 106          //-----------------------------------------------------------------
 107          // void WrCLcdC (uchar lcdcomm)
 108          //-----------------------------------------------------------------
 109          //
 110          // 函数功能: 写LCM的指令代码
 111          // 入口参数: LCM指令
 112          // 返回参数: 无
 113          // 全局变量: lcdbuff:LCM命令/数据暂存单元,允许位操作
 114          // 调用模块: Wr_CodeData()     
 115          // 注意事项:
 116          //-----------------------------------------------------------------
C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 3   

 117          void WrCLcdC (uchar lcdcomm)
 118          {
 119   1        lcdbuff = lcdcomm;
 120   1        lcdbuff_1 = lcdcomm;
 121   1        RS_clr;                             // RS=0,RW=0,E=1-0:允许写
 122   1        RW_clr;
 123   1        Wr_CodeData();                      // 写入LCM指令                             
 124   1      }
 125          
 126          //-----------------------------------------------------------------
 127          // void WrCLcdD (uchar lcddata)
 128          //-----------------------------------------------------------------
 129          //
 130          // 函数功能: 写LCM要显示的数据
 131          // 入口参数: 待写的数据
 132          // 返回参数: 无
 133          // 全局变量: lcdbuff:LCM命令/数据暂存单元,允许位操作
 134          // 调用模块: Wr_CodeData()     
 135          // 注意事项:
 136          //-----------------------------------------------------------------
 137          void WrCLcdD (uchar lcddata)
 138          {
 139   1        lcdbuff = lcddata;
 140   1        lcdbuff_1 = lcddata;
 141   1        RS_set;                             // RS=1,RW=0,E=1-0:允许写
 142   1        RW_clr; 
 143   1        Wr_CodeData();
 144   1      }
 145          
 146          
 147          //-----------------------------------------------------------------
 148          // void WriteString (uchar x, uchar y, uchar *s)
 149          //-----------------------------------------------------------------
 150          //
 151          // 函数功能: 指定位置显示一串字符串
 152          // 入口参数: x:行, y:列, *s:字符指针
 153          // 返回参数: 无
 154          // 全局变量: 无
 155          // 调用模块: WrCLcdC(uchar);WrCLcdD(uchar)     
 156          // 注意事项: x的值只能为1或2, y≤16
 157          //-----------------------------------------------------------------
 158          void WriteString (uchar x, uchar y, uchar *s)          
 159          {
 160   1        // 设置LCM显示DDRAM起始地址
 161   1        if (x == 1)
 162   1          WrCLcdC(0x80+y-0x01);               // 第一行
 163   1        else 
 164   1          WrCLcdC(0xc0+y-0x01);               // 第二行
 165   1        // 显示字符串                 
 166   1        for ( ; *s != '\0'; s ++)
 167   1        {
 168   2          WrCLcdD (*s); 
 169   2        } 
 170   1      }
 171          
 172          // 写操作共同部分程序
 173          void Wr_CodeData (void)
 174          {
 175   1        DLCD &= 0x0f;                       // 清高四位
 176   1        lcdbuff &= 0xf0;                    // 清低四位
 177   1        DLCD |= lcdbuff;
 178   1        E_set;                              // E高低电平时间最少为450ns
C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 4   

 179   1        _nop_();
 180   1        Delay_ns(2);
 181   1        E_clr;
 182   1        _nop_();
 183   1        Delay_ns(2);
 184   1        DLCD &= 0x0f;                       // 清高四位
 185   1        lcdbuff = (lcdbuff_1 << 4);         // 左移四位
 186   1        lcdbuff &= 0xf0;                    // 清低四位
 187   1        DLCD |= lcdbuff;
 188   1        E_set;                              // E高低电平时间最少为450ns
 189   1        _nop_();
 190   1        Delay_ns(2);
 191   1        E_clr;
 192   1        E_clr;
 193   1        Delay_10us(200);
 194   1      }
 195          
 196          //-----------------------------------------------------------------
 197          // void CG_Write (void)
 198          //-----------------------------------------------------------------
 199          //
 200          // 函数功能: 将自定义的字符送到CGRAM,以便使用时调用
 201          // 入口参数: 无
 202          // 返回参数: 无
 203          // 全局变量: 无
 204          // 调用模块: WrCLcdC(uchar);WrCLcdD(uchar)     
 205          // 注意事项: 
 206          //-----------------------------------------------------------------
 207          /**/
 208          void CG_Write (void)
 209          {
 210   1        uchar i;
 211   1      
 212   1        WrCLcdC(0x40);                      // 设置LCM的CGRAM首地址
 213   1        for (i=0; i<64; i++)                // 共设置8个5*8字符
 214   1        {
 215   2          WrCLcdD(CGTab[i]);
 216   2        }
 217   1      }
 218          /**/
 219          
 220          //-----------------------------------------------------------------
 221          // void WrCLcd_char_num (uchar x, uchar y, uchar uchar_num)
 222          //-----------------------------------------------------------------
 223          //
 224          // 函数功能: 显示十进制无符号字符数据
 225          // 入口参数: x:行, y:列, uchar_num:无符号字符型数据
 226          // 返回参数: 无
 227          // 全局变量: 无
 228          // 调用模块: WrCLcdC(uchar);WrCLcdD(uchar)     
 229          // 注意事项: 显示数据格式为左对齐方式; x的值只能为1或2, y≤16
 230          //-----------------------------------------------------------------
 231          //void WrCLcd_char_num (uchar x, uchar y, uchar uchar_num)
 232          //{
 233          //  bit   zc_flag;                              // 高位为零标志
 234          //  uchar i;
 235          //  uchar date_bufc[4] = {"    "};              // 缓存数组
 236          
 237          //  zc_flag = 0;                                // ‘1’：电平表示已经有非零数据出现过
 238          
 239          //  // 设置LCM显示DDRAM起始地址
 240          //  if (x == 1)
C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 5   

 241          //    WrCLcdC(0x80+y-0x01);               // 第一行
 242          //  else 
 243          //    WrCLcdC(0xc0+y-0x01);               // 第二行
 244          //  // 显示数据                 
 245          //  if (uchar_num != 0)
 246          //  {
 247          //    date_bufc[0] = ((uchar_num % 1000) / 100) + 48; // 取出数据最高位
 248          //    date_bufc[1] = ((uchar_num % 100) / 10) + 48;
 249          //    date_bufc[2] = (uchar_num % 10) + 48;           // 取出数据最低位
 250          //  
 251          //    for (i = 0; i < 3; i ++)
 252          //    {
 253          //      if ((date_bufc[i] != '0') && (zc_flag == 0))
 254          //      {
 255          //        zc_flag = 1;
 256          //      }
 257          //      if (zc_flag == 1)
 258          //      {
 259          //        WrCLcdD(date_bufc[i]);
 260          //      }
 261          //    }
 262          //  }
 263          //  else 
 264          //  {
 265          //    WrCLcdD('0');
 266          //  }
 267          //}
 268          
 269          //-----------------------------------------------------------------
 270          // void WrCLcd_int_num (uchar x, uchar y, uint  uint_num)
 271          //-----------------------------------------------------------------
 272          //
 273          // 函数功能: 显示十进制无符号整型数据
 274          // 入口参数: x:行, y:列, uchar_num:无符号整型数据
 275          // 返回参数: 无
 276          // 全局变量: 无
 277          // 调用模块: WrCLcdC(uchar);WrCLcdD(uchar)     
 278          // 注意事项: 显示数据格式为左对齐方式; x的值只能为1或2, y≤16
 279          //-----------------------------------------------------------------
 280          //void WrCLcd_int_num (uchar x, uchar y, uint  uint_num)
 281          //{
 282          //  bit   zi_flag;                          // 高位为零标志
 283          //  uchar i;
 284          //  uchar date_bufi[6] = {"      "};        // 缓存数组
 285          
 286          //  zi_flag = 0;                            // ‘1’：电平表示已经有非零数据出现过
 287          
 288          //  // 设置LCM显示DDRAM起始地址
 289          //  if (x == 1)
 290          //    WrCLcdC(0x80+y-0x01);                 // 第一行
 291          //  else 
 292          //    WrCLcdC(0xc0+y-0x01);                 // 第二行
 293          //  // 显示数据                 
 294          //  if (uint_num != 0)
 295          //  {
 296          //    date_bufi[0] = ((uint_num % 100000) / 10000) + 48;  // 取出数据最高位
 297          //    date_bufi[1] = ((uint_num % 10000) / 1000) + 48;    // 
 298          //    date_bufi[2] = ((uint_num % 1000) / 100) + 48;      // 
 299          //    date_bufi[3] = ((uint_num % 100) / 10) + 48;        // 
 300          //    date_bufi[4] =  (uint_num % 10) + 48;               // 取出数据最低位
 301          //  
 302          //    for (i = 0; i < 5; i ++)
C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 6   

 303          //    {
 304          //      if ((date_bufi[i] != '0') && (zi_flag == 0))
 305          //      {
 306          //        zi_flag = 1;
 307          //      }
 308          //      if (zi_flag == 1)
 309          //      {
 310          //        WrCLcdD(date_bufi[i]);
 311          //      }
 312          //    }
 313          //  }
 314          //  else 
 315          //  {
 316          //    WrCLcdD('0');
 317          //  }
 318          //}
 319          
 320          //-----------------------------------------------------------------
 321          // void WrCLcd_long_num (uchar x, uchar y, unsigned long ulong_num)
 322          //-----------------------------------------------------------------
 323          //
 324          // 函数功能: 显示十进制无符号长整型数据
 325          // 入口参数: x:行, y:列, uchar_num:无符号长整形数据
 326          // 返回参数: 无
 327          // 全局变量: 无
 328          // 调用模块: WrCLcdC(uchar);WrCLcdD(uchar)     
 329          // 注意事项: 显示数据格式为左对齐方式; x的值只能为1或2, y≤16
 330          //-----------------------------------------------------------------
 331          void WrCLcd_long_num (uchar x, uchar y, unsigned long ulong_num)
 332          { bit   zl_flag;                                // 高位为零标志
 333   1        uchar i;
 334   1        uchar date_bufl[11] = {"           "};        // 缓存数组
 335   1      
 336   1        zl_flag = 0;                                  // ‘1’：电平表示已经有非零数据出现过
 337   1      
 338   1        // 设置LCM显示DDRAM起始地址
 339   1        if (x == 1)
 340   1          WrCLcdC(0x80+y-0x01);                 // 第一行
 341   1        else 
 342   1          WrCLcdC(0xc0+y-0x01);                 // 第二行
 343   1        // 显示数据                 
 344   1        if (ulong_num != 0)
 345   1        {
 346   2          date_bufl[0] = ((ulong_num % 10000000000) / 1000000000) + 48; // 取出数据最高位
 347   2          date_bufl[1] = ((ulong_num % 1000000000) / 100000000) + 48;   // 取出数据最高位
 348   2          date_bufl[2] = ((ulong_num % 100000000) / 10000000) + 48;     // 
 349   2          date_bufl[3] = ((ulong_num % 10000000) / 1000000) + 48;       // 
 350   2          date_bufl[4] = ((ulong_num % 1000000) / 100000) + 48;         // 
 351   2          date_bufl[5] = ((ulong_num % 100000) / 10000) + 48;           // 
 352   2          date_bufl[6] = ((ulong_num % 10000) / 1000) + 48;             // 
 353   2          date_bufl[7] = ((ulong_num % 1000) / 100) + 48;               // 
 354   2          date_bufl[8] = ((ulong_num % 100) / 10) + 48;                 // 
 355   2          date_bufl[9] =  (ulong_num % 10) + 48;                        // 取出数据最低位
 356   2        
 357   2          for (i = 0; i < 10; i ++)
 358   2          {
 359   3            if ((date_bufl[i] != '0') && (zl_flag == 0))
 360   3            {
 361   4              zl_flag = 1;
 362   4            }
 363   3            if (zl_flag == 1)
 364   3            {
C51 COMPILER V9.05   CHARLCD                                                               07/16/2018 20:28:45 PAGE 7   

 365   4              WrCLcdD(date_bufl[i]);
 366   4            }
 367   3          }
 368   2        }
 369   1        else 
 370   1        {
 371   2          WrCLcdD('0');
 372   2        }
 373   1      }
 374          
 375          //-----------------------------------------------------------------------------
 376          // End Of File
 377          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    866    ----
   CONSTANT SIZE    =     75    ----
   XDATA SIZE       =      2      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
